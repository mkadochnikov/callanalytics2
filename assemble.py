#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è —Å–±–æ—Ä–∫–∏ –≤—Å–µ—Ö –º–æ–¥—É–ª–µ–π –≤ –æ–¥–∏–Ω —Ñ–∞–π–ª script.py
"""


def create_complete_script():
    """–°–æ–∑–¥–∞–µ—Ç –ø–æ–ª–Ω—ã–π script.py –∏–∑ –≤—Å–µ—Ö –º–æ–¥—É–ª–µ–π"""

    files_to_combine = [
        "config.py",
        "ai_analyzer.py",
        "bitrix_api.py",
        "audio_processor.py",
        "data_manager.py",
        "main_analyzer.py",
        "streamlit_app.py"
    ]

    print("üîß –°–æ–∑–¥–∞–Ω–∏–µ –ø–æ–ª–Ω–æ–≥–æ script.py –∏–∑ –º–æ–¥—É–ª–µ–π...")

    combined_content = []

    # –î–æ–±–∞–≤–ª—è–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫
    combined_content.append('#!/usr/bin/env python3')
    combined_content.append('"""')
    combined_content.append('–°–∏—Å—Ç–µ–º–∞ –∞–Ω–∞–ª–∏–∑–∞ –∑–≤–æ–Ω–∫–æ–≤ Bitrix24 —Å –õ–û–ö–ê–õ–¨–ù–´–ú–ò –º–æ–¥–µ–ª—è–º–∏ –ò–ò')
    combined_content.append('–ü–æ–ª–Ω—ã–π —Ü–∏–∫–ª: –∑–∞–≥—Ä—É–∑–∫–∞ -> —Ç—Ä–∞–Ω—Å–∫—Ä–∏–±–∞—Ü–∏—è (Whisper) -> –∞–Ω–∞–ª–∏–∑ (–ª–æ–∫–∞–ª—å–Ω–∞—è –º–æ–¥–µ–ª—å) -> –æ—Ç—á–µ—Ç')
    combined_content.append('"""')
    combined_content.append('')

    processed_imports = set()

    for file_name in files_to_combine:
        try:
            print(f"üìÑ –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º {file_name}...")

            with open(file_name, 'r', encoding='utf-8') as f:
                lines = f.readlines()

            # –ü—Ä–æ–ø—É—Å–∫–∞–µ–º shebang –∏ docstring –≤ –º–æ–¥—É–ª—è—Ö
            start_idx = 0
            for i, line in enumerate(lines):
                if line.strip().startswith('from config import') or \
                        line.strip().startswith('from ai_analyzer import') or \
                        line.strip().startswith('from bitrix_api import') or \
                        line.strip().startswith('from audio_processor import') or \
                        line.strip().startswith('from data_manager import') or \
                        line.strip().startswith('from main_analyzer import'):
                    start_idx = i + 1
                    continue

                if line.strip().startswith('import ') or \
                        line.strip().startswith('from ') and 'import' in line:
                    if line.strip() not in processed_imports:
                        if file_name == "config.py":  # –ò–º–ø–æ—Ä—Ç—ã —Ç–æ–ª—å–∫–æ –∏–∑ config.py
                            combined_content.append(line.rstrip())
                            processed_imports.add(line.strip())
                elif line.strip().startswith('class ') or \
                        line.strip().startswith('def ') or \
                        (line.strip() and not line.startswith('#') and not line.startswith(
                            '"""') and not line.startswith("'''")):
                    # –î–æ–±–∞–≤–ª—è–µ–º –∫–æ–¥ –∫–ª–∞—Å—Å–∞/—Ñ—É–Ω–∫—Ü–∏–∏
                    combined_content.extend([line.rstrip() for line in lines[i:]])
                    break

        except FileNotFoundError:
            print(f"‚ö†Ô∏è –§–∞–π–ª {file_name} –Ω–µ –Ω–∞–π–¥–µ–Ω, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º...")
            continue

        combined_content.append('')  # –†–∞–∑–¥–µ–ª–∏—Ç–µ–ª—å –º–µ–∂–¥—É —Ñ–∞–π–ª–∞–º–∏

    # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –æ–±—ä–µ–¥–∏–Ω–µ–Ω–Ω—ã–π —Ñ–∞–π–ª
    with open('script.py', 'w', encoding='utf-8') as f:
        f.write('\n'.join(combined_content))

    print("‚úÖ –§–∞–π–ª script.py —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω!")
    print(f"üìä –í—Å–µ–≥–æ —Å—Ç—Ä–æ–∫: {len(combined_content)}")

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–∏–Ω—Ç–∞–∫—Å–∏—Å
    try:
        with open('script.py', 'r', encoding='utf-8') as f:
            compile(f.read(), 'script.py', 'exec')
        print("‚úÖ –°–∏–Ω—Ç–∞–∫—Å–∏—Å –ø—Ä–æ–≤–µ—Ä–µ–Ω - –æ—à–∏–±–æ–∫ –Ω–µ—Ç!")
    except SyntaxError as e:
        print(f"‚ùå –°–∏–Ω—Ç–∞–∫—Å–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {e}")
        print(f"   –°—Ç—Ä–æ–∫–∞ {e.lineno}: {e.text}")

    return True


if __name__ == "__main__":
    print("üöÄ –ó–∞–ø—É—Å–∫ —Å–±–æ—Ä–∫–∏ –ø–æ–ª–Ω–æ–≥–æ script.py")
    print("=" * 50)

    success = create_complete_script()

    if success:
        print("\n" + "=" * 50)
        print("üéâ –ì–æ—Ç–æ–≤–æ! –¢–µ–ø–µ—Ä—å –∑–∞–ø—É—Å—Ç–∏—Ç–µ:")
        print("   streamlit run script.py")
        print("\nüí° –§–∞–π–ª—ã —Å–æ–∑–¥–∞–Ω—ã:")
        print("   ‚îú‚îÄ‚îÄ script.py (–æ—Å–Ω–æ–≤–Ω–æ–π —Ñ–∞–π–ª)")
        print("   ‚îú‚îÄ‚îÄ config.py (–∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è)")
        print("   ‚îú‚îÄ‚îÄ ai_analyzer.py (–ò–ò –∞–Ω–∞–ª–∏–∑)")
        print("   ‚îú‚îÄ‚îÄ bitrix_api.py (API Bitrix24)")
        print("   ‚îú‚îÄ‚îÄ audio_processor.py (–æ–±—Ä–∞–±–æ—Ç–∫–∞ –∞—É–¥–∏–æ)")
        print("   ‚îú‚îÄ‚îÄ data_manager.py (—É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã–º–∏)")
        print("   ‚îú‚îÄ‚îÄ main_analyzer.py (–æ—Å–Ω–æ–≤–Ω–æ–π –∞–Ω–∞–ª–∏–∑–∞—Ç–æ—Ä)")
        print("   ‚îî‚îÄ‚îÄ streamlit_app.py (–≤–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å)")
    else:
        print("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ script.py")